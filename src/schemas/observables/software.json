{
  "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/observables/software.json",
  "$schema": "http://json-schema.org/draft/2020-12/schema#",
  "title": "software",
  "description": "The Software Object represents high-level properties associated with software, including software products.",
  "type": "object",
  "allOf": [
    {
      "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/cyber-observable-core.json",
      "$schema": "http://json-schema.org/draft/2020-12/schema#",
      "title": "cyber-observable-core",
      "description": "Common properties and behavior across all Cyber Observable Objects.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "Indicates that this object is an Observable Object. The value of this property MUST be a valid Observable Object type name, but to allow for custom objects this has been removed from the schema.",
          "not": {
            "enum": [
              "action"
            ]
          }
        },
        "spec_version": {
          "type": "string",
          "enum": [
            "2.0",
            "2.1"
          ],
          "description": "The version of the STIX specification used to represent the content in this cyber-observable."
        },
        "object_marking_refs": {
          "type": "array",
          "description": "The list of marking-definition objects to be applied to this object.",
          "items": {
            "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json",
            "$schema": "http://json-schema.org/draft/2020-12/schema#",
            "title": "identifier",
            "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          },
          "minItems": 1
        },
        "granular_markings": {
          "type": "array",
          "description": "The set of granular markings that apply to this object.",
          "items": {
            "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/granular-marking.json",
            "$schema": "http://json-schema.org/draft/2020-12/schema#",
            "title": "granular-marking",
            "description": "The granular-marking type defines how the list of marking-definition objects referenced by the marking_refs property to apply to a set of content identified by the list of selectors in the selectors property.",
            "type": "object",
            "properties": {
              "selectors": {
                "type": "array",
                "description": "A list of selectors for content contained within the STIX object in which this property appears.",
                "items": {
                  "type": "string",
                  "pattern": "^([a-z0-9_-]{3,249}(\\.(\\[\\d+\\]|[a-z0-9_-]{1,250}))*|id)$"
                },
                "minItems": 1
              },
              "lang": {
                "type": "string",
                "description": "Identifies the language of the text identified by this marking."
              },
              "marking_ref": {
                "allOf": [
                  {
                    "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json",
                    "$schema": "http://json-schema.org/draft/2020-12/schema#",
                    "title": "identifier",
                    "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
                    "type": "string",
                    "pattern": "^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
                  },
                  {
                    "pattern": "^marking-definition--",
                    "description": "The marking_ref property specifies the ID of the marking-definition object that describes the marking."
                  }
                ]
              }
            },
            "required": [
              "selectors",
              "marking_ref"
            ]
          },
          "minItems": 1
        },
        "defanged": {
          "type": "boolean",
          "description": "Defines whether or not the data contained within the object has been defanged."
        },
        "id": {
          "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/identifier.json",
          "$schema": "http://json-schema.org/draft/2020-12/schema#",
          "title": "identifier",
          "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
        },
        "extensions": {
          "description": "Specifies any extensions of the object, as a dictionary.",
          "type": "object",
          "minProperties": 1,
          "patternProperties": {
            "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$": {
              "type": "object",
              "minProperties": 1,
              "allOf": [
                {
                  "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/properties.json",
                  "$schema": "http://json-schema.org/draft/2020-12/schema#",
                  "title": "properties",
                  "description": "Rules for custom properties",
                  "patternProperties": {
                    "^[a-z][a-z0-9_]{0,245}_bin$": {
                      "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/binary.json",
                      "$schema": "http://json-schema.org/draft/2020-12/schema#",
                      "title": "binary",
                      "description": "The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with '_bin'. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.",
                      "type": "string",
                      "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$"
                    },
                    "^[a-z][a-z0-9_]{0,245}_hex$": {
                      "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/hex.json",
                      "$schema": "http://json-schema.org/draft/2020-12/schema#",
                      "title": "hex",
                      "description": "The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits '0' through '9' and the letters 'a' through 'f'.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with '_hex'.",
                      "type": "string",
                      "pattern": "^([a-fA-F0-9]{2})+$"
                    },
                    "^([a-z][a-z0-9_]{2,249})|id$": {
                      "anyOf": [
                        {
                          "type": "array",
                          "minItems": 1
                        },
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "^extension-definition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
              "allOf": [
                {
                  "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/extension.json",
                  "$schema": "http://json-schema.org/draft/2020-12/schema#",
                  "type": "object",
                  "minProperties": 1,
                  "properties": {
                    "extension_type": {
                      "description": "The type of extension.",
                      "type": "string",
                      "enum": [
                        "new-sdo",
                        "new-sco",
                        "new-sro",
                        "property-extension",
                        "toplevel-property-extension"
                      ]
                    }
                  },
                  "allOf": [
                    {
                      "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/properties.json",
                      "$schema": "http://json-schema.org/draft/2020-12/schema#",
                      "title": "properties",
                      "description": "Rules for custom properties",
                      "patternProperties": {
                        "^[a-z][a-z0-9_]{0,245}_bin$": {
                          "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/binary.json",
                          "$schema": "http://json-schema.org/draft/2020-12/schema#",
                          "title": "binary",
                          "description": "The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with '_bin'. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.",
                          "type": "string",
                          "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$"
                        },
                        "^[a-z][a-z0-9_]{0,245}_hex$": {
                          "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/hex.json",
                          "$schema": "http://json-schema.org/draft/2020-12/schema#",
                          "title": "hex",
                          "description": "The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits '0' through '9' and the letters 'a' through 'f'.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with '_hex'.",
                          "type": "string",
                          "pattern": "^([a-fA-F0-9]{2})+$"
                        },
                        "^([a-z][a-z0-9_]{2,249})|id$": {
                          "anyOf": [
                            {
                              "type": "array",
                              "minItems": 1
                            },
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "required": [
                    "extension_type"
                  ],
                  "definitions": {
                    "extension-type-enum": {
                      "type": "string",
                      "enum": [
                        "new-sdo",
                        "new-sco",
                        "new-sro",
                        "property-extension",
                        "toplevel-property-extension"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "allOf": [
        {
          "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/properties.json",
          "$schema": "http://json-schema.org/draft/2020-12/schema#",
          "title": "properties",
          "description": "Rules for custom properties",
          "patternProperties": {
            "^[a-z][a-z0-9_]{0,245}_bin$": {
              "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/binary.json",
              "$schema": "http://json-schema.org/draft/2020-12/schema#",
              "title": "binary",
              "description": "The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with '_bin'. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.",
              "type": "string",
              "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$"
            },
            "^[a-z][a-z0-9_]{0,245}_hex$": {
              "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/hex.json",
              "$schema": "http://json-schema.org/draft/2020-12/schema#",
              "title": "hex",
              "description": "The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits '0' through '9' and the letters 'a' through 'f'.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with '_hex'.",
              "type": "string",
              "pattern": "^([a-fA-F0-9]{2})+$"
            },
            "^([a-z][a-z0-9_]{2,249})|id$": {
              "anyOf": [
                {
                  "type": "array",
                  "minItems": 1
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      ],
      "not": {
        "anyOf": [
          {
            "required": [
              "severity"
            ]
          },
          {
            "required": [
              "action"
            ]
          },
          {
            "required": [
              "username"
            ]
          },
          {
            "required": [
              "phone_numbers"
            ]
          }
        ]
      },
      "required": [
        "type",
        "id"
      ]
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `software`.",
          "enum": [
            "software"
          ]
        },
        "id": {
          "title": "id",
          "pattern": "^software--"
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the software."
        },
        "cpe": {
          "type": "string",
          "pattern": "cpe:2\\.3:[aho\\*\\-](:(((\\?*|\\*?)([a-zA-Z0-9\\-\\._]|(\\\\[\\\\\\*\\?!\"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]))+(\\?*|\\*?))|[\\*\\-])){5}(:(([a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))?)|[\\*\\-]))(:(((\\?*|\\*?)([a-zA-Z0-9\\-\\._]|(\\\\[\\\\\\*\\?!\"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]))+(\\?*|\\*?))|[\\*\\-])){4}",
          "description": "Specifies the Common Platform Enumeration (CPE) entry for the software, if available. The value for this property MUST be a CPE v2.3 entry from the official NVD CPE Dictionary."
        },
        "swid": {
          "type": "string",
          "description": "Specifies the Software Identification (SWID) Tags entry for the software, if available."
        },
        "languages": {
          "type": "array",
          "description": "Specifies the languages supported by the software. The value of each list member MUST be an ISO 639-2 language code.",
          "items": {
            "type": "string",
            "pattern": "^[a-z]{3}$"
          },
          "minItems": 1
        },
        "vendor": {
          "type": "string",
          "description": "Specifies the name of the vendor of the software."
        },
        "version": {
          "type": "string",
          "description": "Specifies the version of the software."
        }
      }
    }
  ],
  "required": [
    "name"
  ]
}